#include <iostream>
#if (std::includes(std::begin(container), std::end(container),
  std::begin(), std::end())) {
    
}
using namespace std;

int main() {
/******************************************************************************/
// horiziontal/vertical Line user-defind length 
    cin >> l;
    for(int i=0; i<l; i++) {
    cout << '*';
    }
    cout << '\n';
    
/******************************************************************************/
// Rectangle/square user-defind width, height
    cin >> w >> h;
    for(int i=0; i<h; i++) {   
        for(int i=0; i<w; i++) {
        cout << '*';
        }
        cout << '\n';
    }
/******************************************************************************/
// Right Triangle user-defind height
    cin >> h;
    for(int i=0; i<h; i++) {   
        for(int j=0; j<i; j++) {
        cout << '*';
        }
        cout << '\n';
    }
// other solution
    cin >> h;
    for(int i=0; i<h; i++) {
       string(i, '*');
        cout << '\n';
    }
/******************************************************************************/
    cin >> h;
    for(int i=h; i>0; i--) {   
        for(int j=0; j<i; j++) {
        cout << '*';
        }
        cout << '\n';
    }


    cin >> h;
    for(int i=0; i<h; i++) { 
        for(int j=0; j<h-i; j++) {
        cout << '*';
        }
        cout << '\n';
    }
/******************************************************************************/
    return 0;
}



system("pwd");


- contest
- submissions
- groups
- Virtual participation




/******************************************************************************/
    int maxScore = 0; // keep track of our largest score
    for (const auto &score: scores) // iterate over array scores, assigning each value in turn to variable score
        if (score > maxScore)
            maxScore = score;
 
    std::cout << "The best score was " << maxScore << '\n';
/******************************************************************************/
function
template function
/******************************************************************************/
Regarding to the “ambiguous call” error, it happens because there is a function already called “swap” in the namespace std with the same parameters.

To solve this problem you can remove the “using namespace std;” code or change the name of your function for anything except “swap”
/******************************************************************************/
prefix increment ++i
postfix increment i++
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/

cin >> rows;

for(int i=1; i<=rows; i++) {
    for(int j=0; j< rows-i; j++) cout << ' ';
    for(int k=0; k<i*2-1; k++) cout << '*';
    cout << '\n';
}
/******************************************************************************/
// chess Board
int w;
bool flag = true;
cin >> w;

for(int i=0; i <3; i++) {
    for(int i=0; i <w; i++) {
        if(flag == true) {
            cout << "*****";
            flag = false;
        } else {
            cout << "     ";
            flag = true;
            }
    }
        cout << '\n';
}
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
